// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.7.1
// source: protos/proposal.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProposalStatus int32

const (
	ProposalStatus_VOTING   ProposalStatus = 0
	ProposalStatus_SUCCESS  ProposalStatus = 1
	ProposalStatus_FAILURE  ProposalStatus = 2
	ProposalStatus_CANCELED ProposalStatus = 3
)

// Enum value maps for ProposalStatus.
var (
	ProposalStatus_name = map[int32]string{
		0: "VOTING",
		1: "SUCCESS",
		2: "FAILURE",
		3: "CANCELED",
	}
	ProposalStatus_value = map[string]int32{
		"VOTING":   0,
		"SUCCESS":  1,
		"FAILURE":  2,
		"CANCELED": 3,
	}
)

func (x ProposalStatus) Enum() *ProposalStatus {
	p := new(ProposalStatus)
	*p = x
	return p
}

func (x ProposalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_proposal_proto_enumTypes[0].Descriptor()
}

func (ProposalStatus) Type() protoreflect.EnumType {
	return &file_protos_proposal_proto_enumTypes[0]
}

func (x ProposalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalStatus.Descriptor instead.
func (ProposalStatus) EnumDescriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{0}
}

// GovernTokenBalance
type GovernTokenBalance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBalance                string `protobuf:"bytes,1,opt,name=total_balance,json=totalBalance,proto3" json:"total_balance,omitempty"`
	AvailableBalanceForTdpos    string `protobuf:"bytes,2,opt,name=available_balance_for_tdpos,json=availableBalanceForTdpos,proto3" json:"available_balance_for_tdpos,omitempty"`
	LockedBalanceForTdpos       string `protobuf:"bytes,3,opt,name=locked_balance_for_tdpos,json=lockedBalanceForTdpos,proto3" json:"locked_balance_for_tdpos,omitempty"`
	AvailableBalanceForProposal string `protobuf:"bytes,4,opt,name=available_balance_for_proposal,json=availableBalanceForProposal,proto3" json:"available_balance_for_proposal,omitempty"`
	LockedBalanceForProposal    string `protobuf:"bytes,5,opt,name=locked_balance_for_proposal,json=lockedBalanceForProposal,proto3" json:"locked_balance_for_proposal,omitempty"`
}

func (x *GovernTokenBalance) Reset() {
	*x = GovernTokenBalance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GovernTokenBalance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GovernTokenBalance) ProtoMessage() {}

func (x *GovernTokenBalance) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GovernTokenBalance.ProtoReflect.Descriptor instead.
func (*GovernTokenBalance) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{0}
}

func (x *GovernTokenBalance) GetTotalBalance() string {
	if x != nil {
		return x.TotalBalance
	}
	return ""
}

func (x *GovernTokenBalance) GetAvailableBalanceForTdpos() string {
	if x != nil {
		return x.AvailableBalanceForTdpos
	}
	return ""
}

func (x *GovernTokenBalance) GetLockedBalanceForTdpos() string {
	if x != nil {
		return x.LockedBalanceForTdpos
	}
	return ""
}

func (x *GovernTokenBalance) GetAvailableBalanceForProposal() string {
	if x != nil {
		return x.AvailableBalanceForProposal
	}
	return ""
}

func (x *GovernTokenBalance) GetLockedBalanceForProposal() string {
	if x != nil {
		return x.LockedBalanceForProposal
	}
	return ""
}

// TriggerDesc
type TriggerDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height int64             `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Module string            `protobuf:"bytes,2,opt,name=module,proto3" json:"module,omitempty"`
	Method string            `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Args   map[string][]byte `protobuf:"bytes,4,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TriggerDesc) Reset() {
	*x = TriggerDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TriggerDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerDesc) ProtoMessage() {}

func (x *TriggerDesc) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerDesc.ProtoReflect.Descriptor instead.
func (*TriggerDesc) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{1}
}

func (x *TriggerDesc) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *TriggerDesc) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *TriggerDesc) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *TriggerDesc) GetArgs() map[string][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

// Proposal
type Proposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module     string            `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Method     string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Args       map[string][]byte `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Trigger    *TriggerDesc      `protobuf:"bytes,4,opt,name=trigger,proto3" json:"trigger,omitempty"`
	VoteAmount string            `protobuf:"bytes,5,opt,name=vote_amount,json=voteAmount,proto3" json:"vote_amount,omitempty"`
	Status     ProposalStatus    `protobuf:"varint,6,opt,name=status,proto3,enum=protos.ProposalStatus" json:"status,omitempty"`
	Proposer   string            `protobuf:"bytes,7,opt,name=proposer,proto3" json:"proposer,omitempty"`
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{2}
}

func (x *Proposal) GetModule() string {
	if x != nil {
		return x.Module
	}
	return ""
}

func (x *Proposal) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Proposal) GetArgs() map[string][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Proposal) GetTrigger() *TriggerDesc {
	if x != nil {
		return x.Trigger
	}
	return nil
}

func (x *Proposal) GetVoteAmount() string {
	if x != nil {
		return x.VoteAmount
	}
	return ""
}

func (x *Proposal) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_VOTING
}

func (x *Proposal) GetProposer() string {
	if x != nil {
		return x.Proposer
	}
	return ""
}

type ProposalRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserRatio map[string]int64 `protobuf:"bytes,1,rep,name=user_ratio,json=userRatio,proto3" json:"user_ratio,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProposalRatio) Reset() {
	*x = ProposalRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposalRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposalRatio) ProtoMessage() {}

func (x *ProposalRatio) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposalRatio.ProtoReflect.Descriptor instead.
func (*ProposalRatio) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{3}
}

func (x *ProposalRatio) GetUserRatio() map[string]int64 {
	if x != nil {
		return x.UserRatio
	}
	return nil
}

//冻结资产记录表
type FrozenAssetsTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total string `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	//repeated FrozenDetails  frozendetail = 2;
	FrozenDetail map[string]*FrozenDetails `protobuf:"bytes,2,rep,name=frozen_detail,json=frozenDetail,proto3" json:"frozen_detail,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//repeated FrozenDetails  thawdetail = 3;
	ThawDetail map[string]*FrozenDetails `protobuf:"bytes,3,rep,name=thaw_detail,json=thawDetail,proto3" json:"thaw_detail,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Timestamp  int64                     `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *FrozenAssetsTable) Reset() {
	*x = FrozenAssetsTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenAssetsTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenAssetsTable) ProtoMessage() {}

func (x *FrozenAssetsTable) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenAssetsTable.ProtoReflect.Descriptor instead.
func (*FrozenAssetsTable) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{4}
}

func (x *FrozenAssetsTable) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *FrozenAssetsTable) GetFrozenDetail() map[string]*FrozenDetails {
	if x != nil {
		return x.FrozenDetail
	}
	return nil
}

func (x *FrozenAssetsTable) GetThawDetail() map[string]*FrozenDetails {
	if x != nil {
		return x.ThawDetail
	}
	return nil
}

func (x *FrozenAssetsTable) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type FrozenDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string txid = 1;
	Height    int64  `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Amount    string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *FrozenDetails) Reset() {
	*x = FrozenDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrozenDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrozenDetails) ProtoMessage() {}

func (x *FrozenDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrozenDetails.ProtoReflect.Descriptor instead.
func (*FrozenDetails) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{5}
}

func (x *FrozenDetails) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FrozenDetails) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *FrozenDetails) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type NodeDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeDetail []*NodeDetail `protobuf:"bytes,1,rep,name=node_detail,json=nodeDetail,proto3" json:"node_detail,omitempty"`
}

func (x *NodeDetails) Reset() {
	*x = NodeDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDetails) ProtoMessage() {}

func (x *NodeDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDetails.ProtoReflect.Descriptor instead.
func (*NodeDetails) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{6}
}

func (x *NodeDetails) GetNodeDetail() []*NodeDetail {
	if x != nil {
		return x.NodeDetail
	}
	return nil
}

type NodeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Height  int64  `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Amount  string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"` //string address = 4;
}

func (x *NodeDetail) Reset() {
	*x = NodeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDetail) ProtoMessage() {}

func (x *NodeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDetail.ProtoReflect.Descriptor instead.
func (*NodeDetail) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{7}
}

func (x *NodeDetail) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *NodeDetail) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *NodeDetail) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

//节点待解冻的信息
type NodeTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeDetails map[int64]*NodeDetails `protobuf:"bytes,1,rep,name=node_details,json=nodeDetails,proto3" json:"node_details,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NodeTable) Reset() {
	*x = NodeTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeTable) ProtoMessage() {}

func (x *NodeTable) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeTable.ProtoReflect.Descriptor instead.
func (*NodeTable) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{8}
}

func (x *NodeTable) GetNodeDetails() map[int64]*NodeDetails {
	if x != nil {
		return x.NodeDetails
	}
	return nil
}

// 分红数据，分为奖励池与提现队列（map结构）两个部分
type AllBonusData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 所有分红奖励池
	BonusPools map[string]*Pool `protobuf:"bytes,1,rep,name=BonusPools,proto3" json:"BonusPools,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// 提现分红奖励队列，到账高度---分红奖励
	DiscountQueue map[int64]*BonusRewardDiscount `protobuf:"bytes,2,rep,name=DiscountQueue,proto3" json:"DiscountQueue,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *AllBonusData) Reset() {
	*x = AllBonusData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllBonusData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllBonusData) ProtoMessage() {}

func (x *AllBonusData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllBonusData.ProtoReflect.Descriptor instead.
func (*AllBonusData) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{9}
}

func (x *AllBonusData) GetBonusPools() map[string]*Pool {
	if x != nil {
		return x.BonusPools
	}
	return nil
}

func (x *AllBonusData) GetDiscountQueue() map[int64]*BonusRewardDiscount {
	if x != nil {
		return x.DiscountQueue
	}
	return nil
}

// 分红奖励池结构
type Pool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 每票奖励
	BonusPerVote string `protobuf:"bytes,1,opt,name=BonusPerVote,proto3" json:"BonusPerVote,omitempty"`
	// 池子总票数
	TotalVotes string `protobuf:"bytes,2,opt,name=TotalVotes,proto3" json:"TotalVotes,omitempty"`
	// 投此分红奖励池子的投票者信息
	Voters map[string]*Voter `protobuf:"bytes,3,rep,name=Voters,proto3" json:"Voters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Pool) Reset() {
	*x = Pool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pool) ProtoMessage() {}

func (x *Pool) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pool.ProtoReflect.Descriptor instead.
func (*Pool) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{10}
}

func (x *Pool) GetBonusPerVote() string {
	if x != nil {
		return x.BonusPerVote
	}
	return ""
}

func (x *Pool) GetTotalVotes() string {
	if x != nil {
		return x.TotalVotes
	}
	return ""
}

func (x *Pool) GetVoters() map[string]*Voter {
	if x != nil {
		return x.Voters
	}
	return nil
}

// 投票者信息
type Voter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 票数
	Amount string `protobuf:"bytes,1,opt,name=Amount,proto3" json:"Amount,omitempty"`
	// 债务
	Debt string `protobuf:"bytes,2,opt,name=Debt,proto3" json:"Debt,omitempty"`
}

func (x *Voter) Reset() {
	*x = Voter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Voter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voter) ProtoMessage() {}

func (x *Voter) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voter.ProtoReflect.Descriptor instead.
func (*Voter) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{11}
}

func (x *Voter) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *Voter) GetDebt() string {
	if x != nil {
		return x.Debt
	}
	return ""
}

// 分红奖励提现map
type BonusRewardDiscount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 用户---提现数量
	UserDiscount map[string]string `protobuf:"bytes,1,rep,name=UserDiscount,proto3" json:"UserDiscount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *BonusRewardDiscount) Reset() {
	*x = BonusRewardDiscount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BonusRewardDiscount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BonusRewardDiscount) ProtoMessage() {}

func (x *BonusRewardDiscount) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BonusRewardDiscount.ProtoReflect.Descriptor instead.
func (*BonusRewardDiscount) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{12}
}

func (x *BonusRewardDiscount) GetUserDiscount() map[string]string {
	if x != nil {
		return x.UserDiscount
	}
	return nil
}

//投票提名记录表
type CandidateRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//总票数
	TatalVote string `protobuf:"bytes,1,opt,name=tatal_vote,json=tatalVote,proto3" json:"tatal_vote,omitempty"`
	//分红比率
	Ratio int64 `protobuf:"varint,2,opt,name=Ratio,proto3" json:"Ratio,omitempty"`
	//投票的人
	VotingUser map[string]string `protobuf:"bytes,3,rep,name=voting_user,json=votingUser,proto3" json:"voting_user,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//是否是提名人(取消此提名人后数据不能删除，通过标志位修改)
	Is_Nominate bool `protobuf:"varint,4,opt,name=is_Nominate,json=isNominate,proto3" json:"is_Nominate,omitempty"`
	//我投票的人
	MyVoting map[string]string `protobuf:"bytes,5,rep,name=my_voting,json=myVoting,proto3" json:"my_voting,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//已使用的总票数
	Used string `protobuf:"bytes,6,opt,name=used,proto3" json:"used,omitempty"`
	//被投票的总票数
	BeVotedTotal string `protobuf:"bytes,7,opt,name=be_voted_total,json=beVotedTotal,proto3" json:"be_voted_total,omitempty"`
	//提名候选人记录
	NominateDetails map[string]*NominateDetails `protobuf:"bytes,8,rep,name=nominate_details,json=nominateDetails,proto3" json:"nominate_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CandidateRatio) Reset() {
	*x = CandidateRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CandidateRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CandidateRatio) ProtoMessage() {}

func (x *CandidateRatio) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CandidateRatio.ProtoReflect.Descriptor instead.
func (*CandidateRatio) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{13}
}

func (x *CandidateRatio) GetTatalVote() string {
	if x != nil {
		return x.TatalVote
	}
	return ""
}

func (x *CandidateRatio) GetRatio() int64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *CandidateRatio) GetVotingUser() map[string]string {
	if x != nil {
		return x.VotingUser
	}
	return nil
}

func (x *CandidateRatio) GetIs_Nominate() bool {
	if x != nil {
		return x.Is_Nominate
	}
	return false
}

func (x *CandidateRatio) GetMyVoting() map[string]string {
	if x != nil {
		return x.MyVoting
	}
	return nil
}

func (x *CandidateRatio) GetUsed() string {
	if x != nil {
		return x.Used
	}
	return ""
}

func (x *CandidateRatio) GetBeVotedTotal() string {
	if x != nil {
		return x.BeVotedTotal
	}
	return ""
}

func (x *CandidateRatio) GetNominateDetails() map[string]*NominateDetails {
	if x != nil {
		return x.NominateDetails
	}
	return nil
}

//缓存表，产块分红读取这个
type CacheVoteCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分红比率
	Ratio int64 `protobuf:"varint,1,opt,name=ratio,proto3" json:"ratio,omitempty"`
	//投票的人
	VotingUser map[string]string `protobuf:"bytes,2,rep,name=voting_user,json=votingUser,proto3" json:"voting_user,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//总票数
	TotalVote string `protobuf:"bytes,3,opt,name=total_vote,json=totalVote,proto3" json:"total_vote,omitempty"`
}

func (x *CacheVoteCandidate) Reset() {
	*x = CacheVoteCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CacheVoteCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CacheVoteCandidate) ProtoMessage() {}

func (x *CacheVoteCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CacheVoteCandidate.ProtoReflect.Descriptor instead.
func (*CacheVoteCandidate) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{14}
}

func (x *CacheVoteCandidate) GetRatio() int64 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *CacheVoteCandidate) GetVotingUser() map[string]string {
	if x != nil {
		return x.VotingUser
	}
	return nil
}

func (x *CacheVoteCandidate) GetTotalVote() string {
	if x != nil {
		return x.TotalVote
	}
	return ""
}

//纪录所有提名人，每轮开始的时候用于更新缓存表
type AllCandidate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Candidate map[string]string `protobuf:"bytes,1,rep,name=candidate,proto3" json:"candidate,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//全网冻结资产
	Freemonry string `protobuf:"bytes,2,opt,name=freemonry,proto3" json:"freemonry,omitempty"`
	//冻结百分比
	Percentage string `protobuf:"bytes,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
}

func (x *AllCandidate) Reset() {
	*x = AllCandidate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AllCandidate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AllCandidate) ProtoMessage() {}

func (x *AllCandidate) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AllCandidate.ProtoReflect.Descriptor instead.
func (*AllCandidate) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{15}
}

func (x *AllCandidate) GetCandidate() map[string]string {
	if x != nil {
		return x.Candidate
	}
	return nil
}

func (x *AllCandidate) GetFreemonry() string {
	if x != nil {
		return x.Freemonry
	}
	return ""
}

func (x *AllCandidate) GetPercentage() string {
	if x != nil {
		return x.Percentage
	}
	return ""
}

type NominateDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//抵押的资产
	Amount string `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount,omitempty"`
	//是否取消提名
	Isnominate bool `protobuf:"varint,2,opt,name=isnominate,proto3" json:"isnominate,omitempty"`
}

func (x *NominateDetails) Reset() {
	*x = NominateDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NominateDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NominateDetails) ProtoMessage() {}

func (x *NominateDetails) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NominateDetails.ProtoReflect.Descriptor instead.
func (*NominateDetails) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{16}
}

func (x *NominateDetails) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *NominateDetails) GetIsnominate() bool {
	if x != nil {
		return x.Isnominate
	}
	return false
}

//记录周期term表
type TermTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//当前term
	Trem int64 `protobuf:"varint,1,opt,name=trem,proto3" json:"trem,omitempty"`
	//是否是新的一个周期
	NewCycle bool `protobuf:"varint,2,opt,name=new_cycle,json=newCycle,proto3" json:"new_cycle,omitempty"`
}

func (x *TermTable) Reset() {
	*x = TermTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TermTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TermTable) ProtoMessage() {}

func (x *TermTable) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TermTable.ProtoReflect.Descriptor instead.
func (*TermTable) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{17}
}

func (x *TermTable) GetTrem() int64 {
	if x != nil {
		return x.Trem
	}
	return 0
}

func (x *TermTable) GetNewCycle() bool {
	if x != nil {
		return x.NewCycle
	}
	return false
}

type PledgeVotingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FrozenAssetsTable *FrozenAssetsTable   `protobuf:"bytes,1,opt,name=frozen_assets_table,json=frozenAssetsTable,proto3" json:"frozen_assets_table,omitempty"`
	VoteDetailsStatus []*VoteDetailsStatus `protobuf:"bytes,2,rep,name=vote_details_status,json=voteDetailsStatus,proto3" json:"vote_details_status,omitempty"`
	//投票了多少节点
	MyVote int64 `protobuf:"varint,3,opt,name=my_vote,json=myVote,proto3" json:"my_vote,omitempty"`
	//全网冻结总量
	Freezetotal string `protobuf:"bytes,4,opt,name=freezetotal,proto3" json:"freezetotal,omitempty"`
	//治理代币总量
	TotalAmount string `protobuf:"bytes,5,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	//消耗总量
	UsedAmount string `protobuf:"bytes,6,opt,name=used_amount,json=usedAmount,proto3" json:"used_amount,omitempty"`
	//冻结中
	FreezeAmount string `protobuf:"bytes,7,opt,name=freeze_amount,json=freezeAmount,proto3" json:"freeze_amount,omitempty"`
}

func (x *PledgeVotingResponse) Reset() {
	*x = PledgeVotingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PledgeVotingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PledgeVotingResponse) ProtoMessage() {}

func (x *PledgeVotingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PledgeVotingResponse.ProtoReflect.Descriptor instead.
func (*PledgeVotingResponse) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{18}
}

func (x *PledgeVotingResponse) GetFrozenAssetsTable() *FrozenAssetsTable {
	if x != nil {
		return x.FrozenAssetsTable
	}
	return nil
}

func (x *PledgeVotingResponse) GetVoteDetailsStatus() []*VoteDetailsStatus {
	if x != nil {
		return x.VoteDetailsStatus
	}
	return nil
}

func (x *PledgeVotingResponse) GetMyVote() int64 {
	if x != nil {
		return x.MyVote
	}
	return 0
}

func (x *PledgeVotingResponse) GetFreezetotal() string {
	if x != nil {
		return x.Freezetotal
	}
	return ""
}

func (x *PledgeVotingResponse) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *PledgeVotingResponse) GetUsedAmount() string {
	if x != nil {
		return x.UsedAmount
	}
	return ""
}

func (x *PledgeVotingResponse) GetFreezeAmount() string {
	if x != nil {
		return x.FreezeAmount
	}
	return ""
}

type VoteDetailsStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Toaddr  string `protobuf:"bytes,1,opt,name=toaddr,proto3" json:"toaddr,omitempty"`
	Ballots int64  `protobuf:"varint,2,opt,name=ballots,proto3" json:"ballots,omitempty"`
	Ratio   int32  `protobuf:"varint,3,opt,name=ratio,proto3" json:"ratio,omitempty"`
	//当前候选人总票数
	Totalballots string `protobuf:"bytes,4,opt,name=totalballots,proto3" json:"totalballots,omitempty"`
}

func (x *VoteDetailsStatus) Reset() {
	*x = VoteDetailsStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteDetailsStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteDetailsStatus) ProtoMessage() {}

func (x *VoteDetailsStatus) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteDetailsStatus.ProtoReflect.Descriptor instead.
func (*VoteDetailsStatus) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{19}
}

func (x *VoteDetailsStatus) GetToaddr() string {
	if x != nil {
		return x.Toaddr
	}
	return ""
}

func (x *VoteDetailsStatus) GetBallots() int64 {
	if x != nil {
		return x.Ballots
	}
	return 0
}

func (x *VoteDetailsStatus) GetRatio() int32 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *VoteDetailsStatus) GetTotalballots() string {
	if x != nil {
		return x.Totalballots
	}
	return ""
}

type VerificationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//总票数
	Total string `protobuf:"bytes,1,opt,name=total,proto3" json:"total,omitempty"`
	//分成比
	Ratio int32 `protobuf:"varint,2,opt,name=ratio,proto3" json:"ratio,omitempty"`
	//投票百分比
	Percentage string `protobuf:"bytes,3,opt,name=percentage,proto3" json:"percentage,omitempty"`
	//我的票数
	MyTotal string `protobuf:"bytes,4,opt,name=my_total,json=myTotal,proto3" json:"my_total,omitempty"`
}

func (x *VerificationInfo) Reset() {
	*x = VerificationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationInfo) ProtoMessage() {}

func (x *VerificationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationInfo.ProtoReflect.Descriptor instead.
func (*VerificationInfo) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{20}
}

func (x *VerificationInfo) GetTotal() string {
	if x != nil {
		return x.Total
	}
	return ""
}

func (x *VerificationInfo) GetRatio() int32 {
	if x != nil {
		return x.Ratio
	}
	return 0
}

func (x *VerificationInfo) GetPercentage() string {
	if x != nil {
		return x.Percentage
	}
	return ""
}

func (x *VerificationInfo) GetMyTotal() string {
	if x != nil {
		return x.MyTotal
	}
	return ""
}

type VerificationTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//验证人
	Verification map[string]*VerificationInfo `protobuf:"bytes,1,rep,name=verification,proto3" json:"verification,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//候选验证人
	Candidate map[string]*VerificationInfo `protobuf:"bytes,2,rep,name=candidate,proto3" json:"candidate,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	//验证人数量
	Len int64 `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
	//候选人数量
	LenCandidate int64 `protobuf:"varint,4,opt,name=len_candidate,json=lenCandidate,proto3" json:"len_candidate,omitempty"`
	//出块倒计时
	TimeLeft int64 `protobuf:"varint,5,opt,name=time_left,json=timeLeft,proto3" json:"time_left,omitempty"`
}

func (x *VerificationTable) Reset() {
	*x = VerificationTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerificationTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerificationTable) ProtoMessage() {}

func (x *VerificationTable) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerificationTable.ProtoReflect.Descriptor instead.
func (*VerificationTable) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{21}
}

func (x *VerificationTable) GetVerification() map[string]*VerificationInfo {
	if x != nil {
		return x.Verification
	}
	return nil
}

func (x *VerificationTable) GetCandidate() map[string]*VerificationInfo {
	if x != nil {
		return x.Candidate
	}
	return nil
}

func (x *VerificationTable) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

func (x *VerificationTable) GetLenCandidate() int64 {
	if x != nil {
		return x.LenCandidate
	}
	return 0
}

func (x *VerificationTable) GetTimeLeft() int64 {
	if x != nil {
		return x.TimeLeft
	}
	return 0
}

//查看链的部分信息
type BCStatusExplorer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// bolck height
	Height int64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	//全网总资产
	TotalMoney string `protobuf:"bytes,2,opt,name=total_money,json=totalMoney,proto3" json:"total_money,omitempty"`
	//全网冻结资产
	FreeMonry string `protobuf:"bytes,3,opt,name=free_monry,json=freeMonry,proto3" json:"free_monry,omitempty"`
	//冻结百分比
	Percentage string `protobuf:"bytes,4,opt,name=percentage,proto3" json:"percentage,omitempty"`
	//节点数
	Nodes int64 `protobuf:"varint,5,opt,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *BCStatusExplorer) Reset() {
	*x = BCStatusExplorer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_proposal_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BCStatusExplorer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BCStatusExplorer) ProtoMessage() {}

func (x *BCStatusExplorer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_proposal_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BCStatusExplorer.ProtoReflect.Descriptor instead.
func (*BCStatusExplorer) Descriptor() ([]byte, []int) {
	return file_protos_proposal_proto_rawDescGZIP(), []int{22}
}

func (x *BCStatusExplorer) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BCStatusExplorer) GetTotalMoney() string {
	if x != nil {
		return x.TotalMoney
	}
	return ""
}

func (x *BCStatusExplorer) GetFreeMonry() string {
	if x != nil {
		return x.FreeMonry
	}
	return ""
}

func (x *BCStatusExplorer) GetPercentage() string {
	if x != nil {
		return x.Percentage
	}
	return ""
}

func (x *BCStatusExplorer) GetNodes() int64 {
	if x != nil {
		return x.Nodes
	}
	return 0
}

var File_protos_proposal_proto protoreflect.FileDescriptor

var file_protos_proposal_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22,
	0xb5, 0x02, 0x0a, 0x12, 0x47, 0x6f, 0x76, 0x65, 0x72, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x74, 0x64, 0x70, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x64, 0x70, 0x6f, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x5f, 0x74, 0x64, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x54, 0x64,
	0x70, 0x6f, 0x73, 0x12, 0x43, 0x0a, 0x1e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x3d, 0x0a, 0x1b, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x70,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x6c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x6f, 0x72, 0x50,
	0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x22, 0xc1, 0x01, 0x0a, 0x0b, 0x54, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x31, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65,
	0x73, 0x63, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x61, 0x72,
	0x67, 0x73, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x02, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x2e, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x2e, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67,
	0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x54, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x52, 0x07,
	0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x6f,
	0x74, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x70,
	0x6f, 0x73, 0x65, 0x72, 0x1a, 0x37, 0x0a, 0x09, 0x41, 0x72, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01,
	0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12,
	0x43, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x1a, 0x3c, 0x0a, 0x0e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x93, 0x03, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x50,
	0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x4a, 0x0a, 0x0b, 0x74, 0x68, 0x61, 0x77, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46,
	0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x54, 0x68, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0a, 0x74, 0x68, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x1a, 0x56, 0x0a, 0x11, 0x46, 0x72,
	0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x1a, 0x54, 0x0a, 0x0f, 0x54, 0x68, 0x61, 0x77, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5d, 0x0a, 0x0d, 0x46, 0x72, 0x6f, 0x7a,
	0x65, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x42, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x0b, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x56, 0x0a, 0x0a, 0x4e,
	0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0xa7, 0x01, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x12, 0x45, 0x0a, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x6e, 0x6f, 0x64,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x53, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xcf, 0x02,
	0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44,
	0x0a, 0x0a, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x6f,
	0x6f, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50,
	0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c, 0x6c, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x1a, 0x4b, 0x0a, 0x0f, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x6f, 0x6f, 0x6c,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x5d, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xc6, 0x01, 0x0a, 0x04, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x6f, 0x6e, 0x75,
	0x73, 0x50, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x42, 0x6f, 0x6e, 0x75, 0x73, 0x50, 0x65, 0x72, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x06,
	0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x48,
	0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x72, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x05, 0x56, 0x6f, 0x74, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x65, 0x62,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x65, 0x62, 0x74, 0x22, 0xa9, 0x01,
	0x0a, 0x13, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x51, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x3f, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xdd, 0x04, 0x0a, 0x0e, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x74, 0x61, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x61, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x47, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x56,
	0x6f, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a,
	0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x6d,
	0x79, 0x5f, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x4d, 0x79, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x79, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x65, 0x5f, 0x76, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x65, 0x56, 0x6f,
	0x74, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x56, 0x0a, 0x10, 0x6e, 0x6f, 0x6d, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x2e, 0x4e, 0x6f, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0f, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x1a, 0x3d, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x3b, 0x0a, 0x0d, 0x4d, 0x79, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5b, 0x0a, 0x14,
	0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e,
	0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xd5, 0x01, 0x0a, 0x12, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x4b, 0x0a, 0x0b, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x61, 0x63, 0x68, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x61,
	0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73,
	0x65, 0x72, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x76, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x74,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f,
	0x74, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x73, 0x65, 0x72,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0xcd, 0x01, 0x0a, 0x0c, 0x41, 0x6c, 0x6c, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x41, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41,
	0x6c, 0x6c, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x43, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x64,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x65, 0x65, 0x6d, 0x6f, 0x6e,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x6d, 0x6f,
	0x6e, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74,
	0x61, 0x67, 0x65, 0x1a, 0x3c, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x49, 0x0a, 0x0f, 0x4e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x69, 0x73, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x6e, 0x6f, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x09,
	0x54, 0x65, 0x72, 0x6d, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x72, 0x65,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x72, 0x65, 0x6d, 0x12, 0x1b, 0x0a,
	0x09, 0x6e, 0x65, 0x77, 0x5f, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x6e, 0x65, 0x77, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x22, 0xd0, 0x02, 0x0a, 0x14, 0x50,
	0x6c, 0x65, 0x64, 0x67, 0x65, 0x56, 0x6f, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x13, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x11, 0x66, 0x72, 0x6f,
	0x7a, 0x65, 0x6e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x49,
	0x0a, 0x13, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x11, 0x76, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x79, 0x5f,
	0x76, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x79, 0x56, 0x6f,
	0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x73,
	0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x65, 0x65,
	0x7a, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x72, 0x65, 0x65, 0x7a, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7f, 0x0a,
	0x11, 0x56, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x6f, 0x61, 0x64, 0x64, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c,
	0x6c, 0x6f, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x62, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x79,
	0x0a, 0x10, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x6d, 0x79, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0xb3, 0x03, 0x0a, 0x11, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x4f, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0c, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x46, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x43,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x63,
	0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x6c, 0x65,
	0x6e, 0x5f, 0x63, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6c, 0x65, 0x6e, 0x43, 0x61, 0x6e, 0x64, 0x69, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x65, 0x66, 0x74, 0x1a, 0x59, 0x0a, 0x11,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x56, 0x0a, 0x0e, 0x43, 0x61, 0x6e, 0x64, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa0, 0x01, 0x0a, 0x10, 0x42, 0x43, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x78, 0x70, 0x6c,
	0x6f, 0x72, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x72, 0x65, 0x65, 0x4d, 0x6f, 0x6e, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6e, 0x6f, 0x64,
	0x65, 0x73, 0x2a, 0x44, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x56, 0x4f, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x0b, 0x0a,
	0x07, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x73,
	0x65, 0x6e, 0x73, 0x75, 0x73, 0x2d, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x78, 0x75, 0x70, 0x65,
	0x72, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_proposal_proto_rawDescOnce sync.Once
	file_protos_proposal_proto_rawDescData = file_protos_proposal_proto_rawDesc
)

func file_protos_proposal_proto_rawDescGZIP() []byte {
	file_protos_proposal_proto_rawDescOnce.Do(func() {
		file_protos_proposal_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_proposal_proto_rawDescData)
	})
	return file_protos_proposal_proto_rawDescData
}

var file_protos_proposal_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_proposal_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_protos_proposal_proto_goTypes = []interface{}{
	(ProposalStatus)(0),          // 0: protos.ProposalStatus
	(*GovernTokenBalance)(nil),   // 1: protos.GovernTokenBalance
	(*TriggerDesc)(nil),          // 2: protos.TriggerDesc
	(*Proposal)(nil),             // 3: protos.Proposal
	(*ProposalRatio)(nil),        // 4: protos.ProposalRatio
	(*FrozenAssetsTable)(nil),    // 5: protos.FrozenAssetsTable
	(*FrozenDetails)(nil),        // 6: protos.FrozenDetails
	(*NodeDetails)(nil),          // 7: protos.NodeDetails
	(*NodeDetail)(nil),           // 8: protos.NodeDetail
	(*NodeTable)(nil),            // 9: protos.NodeTable
	(*AllBonusData)(nil),         // 10: protos.AllBonusData
	(*Pool)(nil),                 // 11: protos.Pool
	(*Voter)(nil),                // 12: protos.Voter
	(*BonusRewardDiscount)(nil),  // 13: protos.BonusRewardDiscount
	(*CandidateRatio)(nil),       // 14: protos.CandidateRatio
	(*CacheVoteCandidate)(nil),   // 15: protos.CacheVoteCandidate
	(*AllCandidate)(nil),         // 16: protos.AllCandidate
	(*NominateDetails)(nil),      // 17: protos.NominateDetails
	(*TermTable)(nil),            // 18: protos.TermTable
	(*PledgeVotingResponse)(nil), // 19: protos.PledgeVotingResponse
	(*VoteDetailsStatus)(nil),    // 20: protos.VoteDetailsStatus
	(*VerificationInfo)(nil),     // 21: protos.VerificationInfo
	(*VerificationTable)(nil),    // 22: protos.VerificationTable
	(*BCStatusExplorer)(nil),     // 23: protos.BCStatusExplorer
	nil,                          // 24: protos.TriggerDesc.ArgsEntry
	nil,                          // 25: protos.Proposal.ArgsEntry
	nil,                          // 26: protos.ProposalRatio.UserRatioEntry
	nil,                          // 27: protos.FrozenAssetsTable.FrozenDetailEntry
	nil,                          // 28: protos.FrozenAssetsTable.ThawDetailEntry
	nil,                          // 29: protos.NodeTable.NodeDetailsEntry
	nil,                          // 30: protos.AllBonusData.BonusPoolsEntry
	nil,                          // 31: protos.AllBonusData.DiscountQueueEntry
	nil,                          // 32: protos.Pool.VotersEntry
	nil,                          // 33: protos.BonusRewardDiscount.UserDiscountEntry
	nil,                          // 34: protos.CandidateRatio.VotingUserEntry
	nil,                          // 35: protos.CandidateRatio.MyVotingEntry
	nil,                          // 36: protos.CandidateRatio.NominateDetailsEntry
	nil,                          // 37: protos.CacheVoteCandidate.VotingUserEntry
	nil,                          // 38: protos.AllCandidate.CandidateEntry
	nil,                          // 39: protos.VerificationTable.VerificationEntry
	nil,                          // 40: protos.VerificationTable.CandidateEntry
}
var file_protos_proposal_proto_depIdxs = []int32{
	24, // 0: protos.TriggerDesc.args:type_name -> protos.TriggerDesc.ArgsEntry
	25, // 1: protos.Proposal.args:type_name -> protos.Proposal.ArgsEntry
	2,  // 2: protos.Proposal.trigger:type_name -> protos.TriggerDesc
	0,  // 3: protos.Proposal.status:type_name -> protos.ProposalStatus
	26, // 4: protos.ProposalRatio.user_ratio:type_name -> protos.ProposalRatio.UserRatioEntry
	27, // 5: protos.FrozenAssetsTable.frozen_detail:type_name -> protos.FrozenAssetsTable.FrozenDetailEntry
	28, // 6: protos.FrozenAssetsTable.thaw_detail:type_name -> protos.FrozenAssetsTable.ThawDetailEntry
	8,  // 7: protos.NodeDetails.node_detail:type_name -> protos.NodeDetail
	29, // 8: protos.NodeTable.node_details:type_name -> protos.NodeTable.NodeDetailsEntry
	30, // 9: protos.AllBonusData.BonusPools:type_name -> protos.AllBonusData.BonusPoolsEntry
	31, // 10: protos.AllBonusData.DiscountQueue:type_name -> protos.AllBonusData.DiscountQueueEntry
	32, // 11: protos.Pool.Voters:type_name -> protos.Pool.VotersEntry
	33, // 12: protos.BonusRewardDiscount.UserDiscount:type_name -> protos.BonusRewardDiscount.UserDiscountEntry
	34, // 13: protos.CandidateRatio.voting_user:type_name -> protos.CandidateRatio.VotingUserEntry
	35, // 14: protos.CandidateRatio.my_voting:type_name -> protos.CandidateRatio.MyVotingEntry
	36, // 15: protos.CandidateRatio.nominate_details:type_name -> protos.CandidateRatio.NominateDetailsEntry
	37, // 16: protos.CacheVoteCandidate.voting_user:type_name -> protos.CacheVoteCandidate.VotingUserEntry
	38, // 17: protos.AllCandidate.candidate:type_name -> protos.AllCandidate.CandidateEntry
	5,  // 18: protos.PledgeVotingResponse.frozen_assets_table:type_name -> protos.FrozenAssetsTable
	20, // 19: protos.PledgeVotingResponse.vote_details_status:type_name -> protos.VoteDetailsStatus
	39, // 20: protos.VerificationTable.verification:type_name -> protos.VerificationTable.VerificationEntry
	40, // 21: protos.VerificationTable.candidate:type_name -> protos.VerificationTable.CandidateEntry
	6,  // 22: protos.FrozenAssetsTable.FrozenDetailEntry.value:type_name -> protos.FrozenDetails
	6,  // 23: protos.FrozenAssetsTable.ThawDetailEntry.value:type_name -> protos.FrozenDetails
	7,  // 24: protos.NodeTable.NodeDetailsEntry.value:type_name -> protos.NodeDetails
	11, // 25: protos.AllBonusData.BonusPoolsEntry.value:type_name -> protos.Pool
	13, // 26: protos.AllBonusData.DiscountQueueEntry.value:type_name -> protos.BonusRewardDiscount
	12, // 27: protos.Pool.VotersEntry.value:type_name -> protos.Voter
	17, // 28: protos.CandidateRatio.NominateDetailsEntry.value:type_name -> protos.NominateDetails
	21, // 29: protos.VerificationTable.VerificationEntry.value:type_name -> protos.VerificationInfo
	21, // 30: protos.VerificationTable.CandidateEntry.value:type_name -> protos.VerificationInfo
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_protos_proposal_proto_init() }
func file_protos_proposal_proto_init() {
	if File_protos_proposal_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_proposal_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GovernTokenBalance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TriggerDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposalRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenAssetsTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrozenDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllBonusData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Voter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BonusRewardDiscount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CandidateRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CacheVoteCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AllCandidate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NominateDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TermTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PledgeVotingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteDetailsStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerificationTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_proposal_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BCStatusExplorer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_proposal_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_proposal_proto_goTypes,
		DependencyIndexes: file_protos_proposal_proto_depIdxs,
		EnumInfos:         file_protos_proposal_proto_enumTypes,
		MessageInfos:      file_protos_proposal_proto_msgTypes,
	}.Build()
	File_protos_proposal_proto = out.File
	file_protos_proposal_proto_rawDesc = nil
	file_protos_proposal_proto_goTypes = nil
	file_protos_proposal_proto_depIdxs = nil
}
